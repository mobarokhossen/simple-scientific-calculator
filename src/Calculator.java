
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mobarok
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    //variable
    double minusPlus;
    double first;
    double second;
    double total;
    
    int plusClick;
    int minusClick;
    int multiplyClick;
    int divideClick;
    int decimalClick;
    int powerClick;
    int squareRouteClick;
    int percentageClick;
    int equalClick;
    int factorialClick;
    int lnClick;
    int logClick;
    int tanClick;
    double degrees;
    double radians;
    int sinClick;
    int cosClick;
    int expClick;
    
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        display = new javax.swing.JTextField();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        four = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        five = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        six = new javax.swing.JButton();
        one = new javax.swing.JButton();
        three = new javax.swing.JButton();
        two = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        gero = new javax.swing.JButton();
        decimal = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        percentage = new javax.swing.JButton();
        power = new javax.swing.JButton();
        plusMinus = new javax.swing.JButton();
        displayError = new javax.swing.JTextField();
        factorial = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        ln = new javax.swing.JButton();
        exp = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        log = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        squareRoute = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setBackground(new java.awt.Color(102, 102, 102));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        display.setEditable(false);
        display.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        seven.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        seven.setText("7");
        seven.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        four.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        divide.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        divide.setText("/");
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        five.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        multiply.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        multiply.setText("*");
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        six.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        one.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        three.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        two.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        minus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        gero.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        gero.setText("0");
        gero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geroActionPerformed(evt);
            }
        });

        decimal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        decimal.setText(".");
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });

        equal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        plus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(255, 0, 0));
        clear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clear.setText("CE");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        percentage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        percentage.setText("%");
        percentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentageActionPerformed(evt);
            }
        });

        power.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        power.setText("X^");
        power.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerActionPerformed(evt);
            }
        });

        plusMinus.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        plusMinus.setText("-/+");
        plusMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusMinusActionPerformed(evt);
            }
        });

        displayError.setEditable(false);
        displayError.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        displayError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayErrorActionPerformed(evt);
            }
        });

        factorial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        factorial.setText("!");
        factorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorialActionPerformed(evt);
            }
        });

        pi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pi.setText("π");
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });

        ln.setText("ln");
        ln.setHideActionText(true);
        ln.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnActionPerformed(evt);
            }
        });

        exp.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        exp.setText("e^x");
        exp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expActionPerformed(evt);
            }
        });

        tan.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tan.setText("tan");
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        cos.setText("cos");
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        log.setText("log");
        log.setBorder(null);
        log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logActionPerformed(evt);
            }
        });

        sin.setText("sin");
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        squareRoute.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        squareRoute.setText("sqrt()");
        squareRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareRouteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(display)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayError)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(percentage, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addComponent(plusMinus))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(decimal, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(five, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                                        .addComponent(two, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(15, 15, 15)
                                            .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(squareRoute)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(factorial, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pi, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ln, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(log, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(exp, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(tan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayError, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(log, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tan, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exp, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(factorial, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ln, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(percentage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plusMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(squareRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gero, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decimal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
           
        display.setText(display.getText()+seven.getText());
        }
         if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+seven.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
           tanClick=0;
           sinClick=0;
           cosClick=0;
           expClick=0;
      }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
         if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
        display.setText(display.getText()+eight.getText());
         }
          if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+eight.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
           tanClick=0;
            sinClick=0;
           cosClick=0;
           expClick=0;
      }
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){ 
        display.setText(display.getText()+nine.getText());
        }
         if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+nine.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
          tanClick=0;
          sinClick=0;
          cosClick=0;
          expClick=0;
      }
    }//GEN-LAST:event_nineActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
        display.setText(display.getText()+four.getText());
        }
         if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+four.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
          tanClick=0;
          sinClick=0;
          cosClick=0;
          expClick=0;
      }
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
       if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
           display.setText(display.getText()+five.getText());
       }
        if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+five.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
          tanClick=0;
          sinClick=0;
          cosClick=0;
          expClick=0;
      }
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
       if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
           display.setText(display.getText()+six.getText());
       }
        if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+six.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
          tanClick=0;
          sinClick=0;
          cosClick=0;
          expClick=0;
      }
    }//GEN-LAST:event_sixActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
            display.setText(display.getText()+one.getText());
        }
         if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+one.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
          tanClick=0;
          sinClick=0;
          cosClick=0;
          expClick=0;
      }
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
       if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
           display.setText(display.getText()+two.getText());
       }
        if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+two.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
          tanClick=0;
          sinClick=0;
          cosClick=0;
          expClick=0;
      }
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
     if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
         display.setText(display.getText()+three.getText());
     }
      if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+three.getText());

          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
          tanClick=0;
          sinClick=0;
          cosClick=0;
          expClick=0;
      }
    }//GEN-LAST:event_threeActionPerformed

    private void geroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geroActionPerformed
      if(equalClick ==0 ||squareRouteClick ==0||factorialClick==0||lnClick==0||logClick==0||tanClick==0||sinClick==0||cosClick==0||expClick==0){
          display.setText(display.getText()+gero.getText());
      }
      if(equalClick ==1 ||squareRouteClick ==1||factorialClick==1||lnClick==1||logClick==1||tanClick==1||sinClick==1||cosClick==1||expClick==1){
          display.setText("");
          display.setText(display.getText()+gero.getText());
          equalClick=0;
          squareRouteClick =0;
          lnClick=0;
          logClick=0;
          factorialClick=0;
          tanClick=0;
          sinClick=0;
          cosClick=0;
          expClick=0;
      }
    }//GEN-LAST:event_geroActionPerformed

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
      try{
        if(decimalClick==0){
           display.setText(display.getText()+decimal.getText());
       decimalClick = 1;
       }
      }
      catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
    }//GEN-LAST:event_decimalActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        try{
            first = (Double.parseDouble(String.valueOf(display.getText())));
        display.setText("");
        plusClick=1;
        decimalClick = 0;
        }
        catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
        
       
    }//GEN-LAST:event_plusActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
       try{
           first = (Double.parseDouble(String.valueOf(display.getText())));
        display.setText("");
        minusClick=1;
        decimalClick = 0;
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
    }//GEN-LAST:event_minusActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
       try{
        first = (Double.parseDouble(String.valueOf(display.getText())));
        display.setText("");
        multiplyClick=1;
        decimalClick = 0;
       }
       catch(Exception e){
           displayError.setText("Don't Double Click the Operator");
       }
    }//GEN-LAST:event_multiplyActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
        
        try{
        first = (Double.parseDouble(String.valueOf(display.getText())));
        display.setText("");
        divideClick=1;
        decimalClick = 0;
        }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
    }//GEN-LAST:event_divideActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
        
        
       try{ 
       
        second = (Double.parseDouble(String.valueOf(display.getText())));
        
        //       plus implementatiion
        
        if(plusClick>0){
            total= first+second;
            display.setText((String.valueOf(total)));
            first = 0;
            second = 0;
            plusClick = 0;
            equalClick=1;
            displayError.setText("");
        }
        //       minus implementatiion
        
          if(minusClick>0){
            total= first-second;
            display.setText((String.valueOf(total)));
            first = 0;
            second = 0;
            minusClick = 0;
            equalClick=1;
            displayError.setText("");
            
        }
          //      multiply implementatiion
          
            if(multiplyClick>0){
            total= first*second;
            display.setText((String.valueOf(total)));
            first = 0;
            second = 0;
            multiplyClick = 0;
            equalClick=1;
            displayError.setText("");
        }
            //    Divide implementatiion
            
              if(divideClick>0){
            total= first/second;
            display.setText((String.valueOf(total)));
            first = 0;
            second = 0;
            divideClick = 0;
            equalClick=1;
            displayError.setText("");
        }
              //    power implementatiion
              
              if(powerClick>0){
                  total = Math.pow(first,second);
                  display.setText((String.valueOf(total)));
                  first=0;
                  second=0;
                  powerClick=0;
                  equalClick=1;
                  displayError.setText("");
              }
              if(percentageClick>0){
                  total = (first*second)/100;
                  display.setText((String.valueOf(total)));
                  first=0;
                  second=0;
                  percentageClick=0;
                  equalClick=1;
                  displayError.setText("");
              }
       }catch(Exception e){
           displayError.setText("Don't Double Click the Operator");
        }
              
    }//GEN-LAST:event_equalActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        display.setText("");
        decimalClick=0;
        equalClick=0;
        displayError.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void percentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentageActionPerformed
       try{
        first = (Double.parseDouble(String.valueOf(display.getText())));
     
       display.setText("");
       percentageClick = 1;
       decimalClick=0;
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
    }//GEN-LAST:event_percentageActionPerformed

    private void powerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerActionPerformed
       try{
        first = (Double.parseDouble(String.valueOf(display.getText())));
        display.setText("");
        powerClick = 1;
        decimalClick=0;
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
       
       
    }//GEN-LAST:event_powerActionPerformed

    private void plusMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusMinusActionPerformed
      
        minusPlus=(Double.parseDouble(String.valueOf(display.getText())));
       minusPlus=minusPlus*(-1);
       display.setText(String.valueOf(minusPlus));
       
    }//GEN-LAST:event_plusMinusActionPerformed

    private void squareRouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareRouteActionPerformed
       
        //Square Route implementatiion
        try{
            
        first = (Double.parseDouble(String.valueOf(display.getText())));
        total = Math.sqrt(first);
        display.setText((String.valueOf(total)));
        first=0;
        squareRouteClick = 1;
        decimalClick=0;
        }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
        
    }//GEN-LAST:event_squareRouteActionPerformed

    private void displayErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayErrorActionPerformed
        
    }//GEN-LAST:event_displayErrorActionPerformed

    private void factorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorialActionPerformed
       try{
        total=1;
        first= (Double.parseDouble(String.valueOf(display.getText())));
        for(double i=first;i>=1;i--){
            total=total*i;
            display.setText((String.valueOf(total)));
            first=0;
            decimalClick=0;
            factorialClick=1;
        }
        
       }catch(Exception e){
           displayError.setText("Don't Double Click the Operator");
       }
    }//GEN-LAST:event_factorialActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed

        display.setText("3.1416");
    }//GEN-LAST:event_piActionPerformed

    private void lnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnActionPerformed
         try{
       first = (Double.parseDouble(String.valueOf(display.getText())));
     
         total = Math.log(first);
        display.setText((String.valueOf(total)));
        first=0;
        decimalClick=0;
        lnClick=1;
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
    }//GEN-LAST:event_lnActionPerformed

    private void expActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expActionPerformed
        try{
         first = (Double.parseDouble(String.valueOf(display.getText())));
     
         total = Math.exp(first);
        display.setText((String.valueOf(total)));
        first=0;
        decimalClick=0;
        expClick=1;
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
    }//GEN-LAST:event_expActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
       try{
       first = (Double.parseDouble(String.valueOf(display.getText())));
      if(first==90){
           total=0;
           display.setText((String.valueOf(String.format("%.3f",total))));
       }
       else{
       radians = Math.toRadians(first);
       total = Math.tan(radians);
     
        display.setText((String.valueOf(String.format("%.3f",total))));
      }
        first=0;
        decimalClick=0;
        tanClick=1;
        
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
    }//GEN-LAST:event_tanActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
        try{
       first = (Double.parseDouble(String.valueOf(display.getText())));
      
       radians = Math.toRadians(first);
       total = Math.cos(radians);
        display.setText((String.valueOf(String.format("%.3f",total))));
        first=0;
        decimalClick=0;
        cosClick=1;
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
             
    }//GEN-LAST:event_cosActionPerformed

    private void logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logActionPerformed
       try{
           
        first = (Double.parseDouble(String.valueOf(display.getText())));
     
        total = Math.log10(first);
        display.setText((String.valueOf(total)));
        first=0;
        decimalClick=0;
        logClick=1;
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }  
    }//GEN-LAST:event_logActionPerformed

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
        try{
       first = (Double.parseDouble(String.valueOf(display.getText())));
      
       radians = Math.toRadians(first);
       total = Math.sin(radians);
        display.setText((String.valueOf(String.format("%.3f",total))));
        first=0;
        decimalClick=0;
        sinClick=1;
       }catch(Exception e){
            displayError.setText("Don't Double Click the Operator");
        }
             
    }//GEN-LAST:event_sinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton cos;
    private javax.swing.JButton decimal;
    private javax.swing.JTextField display;
    private javax.swing.JTextField displayError;
    private javax.swing.JButton divide;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton exp;
    private javax.swing.JButton factorial;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton gero;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton ln;
    private javax.swing.JButton log;
    private javax.swing.JButton minus;
    private javax.swing.JButton multiply;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton percentage;
    private javax.swing.JButton pi;
    private javax.swing.JButton plus;
    private javax.swing.JButton plusMinus;
    private javax.swing.JButton power;
    private javax.swing.JButton seven;
    private javax.swing.JButton sin;
    private javax.swing.JButton six;
    private javax.swing.JButton squareRoute;
    private javax.swing.JButton tan;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    // End of variables declaration//GEN-END:variables
}
